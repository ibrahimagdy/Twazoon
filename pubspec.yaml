name: twazoon
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  # State management
  flutter_bloc: ^9.0.0
  provider: ^6.1.2
  # Code generator (mainly used with cubit & retrofit)
  freezed: ^2.5.7
  freezed_annotation: ^2.4.4
  # for dependency injection
  get_it: ^8.0.2
  # Classes and helper functions that support JSON code generation via the `json_serializable` package.
  json_annotation: ^4.9.0
  # Networking
  dio: ^5.7.0
  retrofit: ^4.4.1
  retrofit_generator: ^9.1.5
  pretty_dio_logger: ^1.4.0
  # localization
  intl: ^0.19.0
  easy_localization: ^3.0.7
  # An SVG rendering and widget library for Flutter, which allows painting and displaying Scalable Vector Graphics 1.1 files.
  flutter_svg: ^2.0.16
  # for adapting screen and font size.
  flutter_screenutil: ^5.9.3
  # Flutter library to load and cache network images.
  cached_network_image: ^3.4.1
  # Flutter plugin for reading and writing simple key-value pairs. Wraps NSUserDefaults on iOS and SharedPreferences on Android.
  shared_preferences: ^2.5.2
  # Flutter Secure Storage provides API to store data in secure storage. Keychain is used in iOS, KeyStore based solution is used in Android.
  flutter_secure_storage: ^9.2.2
  # easy way to add shimmer effect
  shimmer: ^3.0.0
  # package to use fonts from fonts.google.com.
  google_fonts: ^6.2.1
  #Render After Effects animations natively on Flutter.
  lottie: ^3.2.0
  # Flutter plugin for selecting images from the Android and iOS image library, and taking new pictures with the camera.
  image_picker: ^1.1.2
  # A package that allows you to use a native file explorer to pick single or multiple absolute file paths, with extension filtering support.
  file_picker: ^10.1.2
  # Flutter plugin for getting commonly used locations on host platform file systems, such as the temp and app data directories.
  path_provider: ^2.1.5
  # A string-based path manipulation library.
  path: ^1.9.0
  # library helps you to decode Json Web Tokens, you can also know if a JWT is already expired.
  jwt_decoder: ^2.0.1
  # support infinite scroll and custom child widget.
  carousel_slider: ^5.0.0
  # combines cookie_jar and dio, based on the interceptor algorithm.
  dio_cookie_manager: ^3.2.0
  # cookie manager for http requests in Dart, help you to deal with the cookie policies and persistence.
  cookie_jar: ^4.0.8
  # Customize Flutter's default white native splash screen with background color and splash image
  flutter_native_splash: ^2.4.4
  # Flutter plugin for querying information about the application package
  package_info_plus: ^8.3.0
  # Flutter plugin for Android, iOS and Web supports cropping images
  image_cropper: ^9.0.0
  #RxDart is an implementation of the popular ReactiveX api for asynchronous programming, leveraging the native Dart Streams api.
  rxdart: ^0.28.0
  #Collections and utilities functions and classes related to collections
  collection: ^1.18.0
  # Customizable animated page indicator with a set of built-in effects
  smooth_page_indicator: ^1.2.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  # Automatically generate code for converting to and from JSON by annotating Dart classes.
  json_serializable: ^6.9.0
  #A build system for Dart code generation and modular compilation
  build_runner: ^2.4.13

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/svgs/
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
